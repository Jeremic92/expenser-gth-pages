{"version":3,"sources":["components/dropdown.js","helpers/id.js","components/input-number.js","components/input-text.js","components/input-date.js","helpers/expense.js","components/addForm.js","components/expenseItem.js","components/stats.js","components/expenseList.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getSelectedValue","localStorage","getItem","JSON","parse","value","handleChange","event","onChange","target","selectedOption","state","options","find","option","setState","selected","getNewOption","newOption","addOption","assign","displayValue","updateOptions","id","Math","floor","random","isDisabled","isInEditMode","react_default","a","createElement","Fragment","htmlFor","label","className","disabled","map","index","key","type","placeholder","onClick","React","Component","generateId","InputNumber","_this$props","name","required","InputText","InputDate","Expense","amount","arguments","length","undefined","date","category","AddForm","addExpense","e","preventDefault","expense","Number","clearInputs","alert","updateForm","formField","defineProperty","handleUpdateOptions","_this2","onSubmit","input_number","input_text","input_date","dropdown","ExpenseItem","handleCancel","updatedExpense","handleSave","updateExpense","handleEdit","handleDelete","deleteExpense","Stats","expenses","expensesPerDayOfTheWeek","dayOfTheWeek","total","percentage","expensesPerMonth","month","expensesPerCategory","filter","setValues","dayOfTheWeekCallback","updatedExpensesPerDayOfTheWeek","_","clone","reduce","current","next","forEach","dayIndex","Date","getDay","toFixed","_this3","expensePerMonthCallback","updatedExpensesPerMonth","expensePerMonth","monthIndex","getMonth","_this4","expensePerCategoryCallback","updatedExpensesPerCategory","expensePerCategory","updatedExpensePerCategory","setDayOfTheWeekValues","setExpensePerMonthValues","setExpensePerCategoryValues","expensesPerDay","ExpenseList","expenseItem","stats","App","componentDidMount","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","componentWillUnmount","removeEventListener","hasOwnProperty","setItem","stringify","concat","toConsumableArray","updatedExpenses","components_addForm","components_expenseList","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uUAwFeA,gCAnFX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaVQ,iBAAmB,WACf,OAAQC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,YAAY,GAAGG,OAAU,IAfrFZ,EAkBnBa,aAAe,SAAAC,GACXd,EAAKD,MAAMgB,SAASD,EAAME,OAAOJ,OACjC,IAAMK,EAAiBjB,EAAKkB,MAAMC,QAAQC,KAAK,SAAAC,GAAM,OAAIA,EAAOT,QAAUE,EAAME,OAAOJ,QACvFZ,EAAKsB,SAAS,CAAEC,SAAUN,EAAeL,SArB1BZ,EAwBnBwB,aAAe,SAAAV,GACXd,EAAKsB,SAAS,CAAEG,UAAWX,EAAME,OAAOJ,SAzBzBZ,EA4BnB0B,UAAY,WACR,IAAMD,EAAYxB,OAAO0B,OAAO,GAAI,CAACC,aAAc5B,EAAKkB,MAAMO,UAAWb,MAAOZ,EAAKkB,MAAMO,YAC3FzB,EAAKD,MAAM8B,cAAcJ,GACzBzB,EAAKsB,SAAS,CAAEG,UAAW,MA7B3BzB,EAAKkB,MAAQ,CACTY,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBV,SAAUvB,EAAKD,MAAMa,OAASZ,EAAKO,mBACnCkB,UAAW,GACXN,QAASnB,EAAKD,MAAMoB,SANTnB,yFAUQD,GACvBI,KAAKmB,SAAS,CAAEC,SAAUxB,EAAMa,MAAOO,QAASpB,EAAMoB,2CAwBtD,IAAMe,EAAa/B,KAAKJ,MAAMmC,WACxBC,EAAehC,KAAKJ,MAAMoC,aAChC,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,SACIJ,EACAC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,QAASrC,KAAKe,MAAMY,IACtB3B,KAAKJ,MAAM0C,OAEhBL,EAAAC,EAAAC,cAAA,UAAQI,UAAU,QAAQZ,GAAI3B,KAAKe,MAAMY,GAAIf,SAAUZ,KAAKU,aAAc8B,SAAUT,EAAYtB,MAAOT,KAAKe,MAAMK,UAE1GpB,KAAKe,MAAMC,QAAQyB,IAAI,SAACvB,EAAQwB,GAAT,OACnBT,EAAAC,EAAAC,cAAA,UAAQ1B,MAAOS,EAAOT,MAAOkC,IAAKD,GAC7BxB,EAAOO,kBAO5BQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,QAASrC,KAAKe,MAAMY,IACtB3B,KAAKJ,MAAM0C,OAEhBL,EAAAC,EAAAC,cAAA,UAAQR,GAAI3B,KAAKe,MAAMY,GAAIY,UAAU,QAAQ3B,SAAUZ,KAAKU,aAAc8B,SAAUT,EAAYtB,MAAOT,KAAKe,MAAMK,UAE1GpB,KAAKe,MAAMC,QAAQyB,IAAI,SAACvB,EAAQwB,GAAT,OACnBT,EAAAC,EAAAC,cAAA,UAAQ1B,MAAOS,EAAOT,MAAOkC,IAAKD,GAC7BxB,EAAOO,kBAM5BQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOS,KAAK,OAAOC,YAAY,qBAAqBN,UAAU,QAAQ9B,MAAOT,KAAKe,MAAMO,UAAWV,SAAUZ,KAAKqB,eAClHY,EAAAC,EAAAC,cAAA,UAAQS,KAAK,SAASL,UAAU,0BAA0BO,QAAS9C,KAAKuB,WAAxE,4BA1EDwB,IAAMC,YCFdC,EAFI,kBAAMrB,KAAKC,MAAsB,IAAhBD,KAAKE,WC4C1BoB,cAvCX,SAAAA,EAAatD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IAChBrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAUVgB,SAAW,SAAAD,GACPd,EAAKD,MAAMgB,SAASD,EAAME,OAAOJ,OACjCZ,EAAKsB,SAAS,CAAEV,MAAOE,EAAME,OAAOJ,SAXpCZ,EAAKkB,MAAQ,CACTN,MAAOZ,EAAKD,MAAMa,OAAS,IAHfZ,yFAOOD,GACvBI,KAAKmB,SAAS,CAAEV,MAAOb,EAAMa,yCAQvB,IAAA0C,EACyCnD,KAAKJ,MAA5CwD,EADFD,EACEC,KAAMd,EADRa,EACQb,MAAOO,EADfM,EACeN,YAAaQ,EAD5BF,EAC4BE,SAC5B1B,EAAKsB,IAEX,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,QAASV,GACXW,GAELL,EAAAC,EAAAC,cAAA,SACIS,KAAK,SACLS,SAAUA,EACVR,YAAaA,EACbpC,MAAOT,KAAKe,MAAMN,MAClBG,SAAUZ,KAAKY,SACfe,GAAIA,EACJyB,KAAMA,EACNb,UAAU,kBAlCJQ,IAAMC,WCwCjBM,cAvCX,SAAAA,EAAa1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IAChBzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KAUVgB,SAAW,SAAAD,GACPd,EAAKD,MAAMgB,SAASD,EAAME,OAAOJ,OACjCZ,EAAKsB,SAAS,CAAEV,MAAOE,EAAME,OAAOJ,SAXpCZ,EAAKkB,MAAQ,CACTN,MAAOZ,EAAKD,MAAMa,OAAS,IAHfZ,yFAOOD,GACvBI,KAAKmB,SAAS,CAAEV,MAAOb,EAAMa,yCAQvB,IAAA0C,EACyCnD,KAAKJ,MAA5CwD,EADFD,EACEC,KAAMd,EADRa,EACQb,MAAOO,EADfM,EACeN,YAAaQ,EAD5BF,EAC4BE,SAC5B1B,EAAKsB,IAEX,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,QAASV,GACXW,GAELL,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLC,YAAaA,EACbQ,SAAUA,EACV5C,MAAOT,KAAKe,MAAMN,MAClBG,SAAUZ,KAAKY,SACfe,GAAIA,EACJyB,KAAMA,EACNb,UAAU,kBAlCNQ,IAAMC,WCuCfO,cAtCX,SAAAA,EAAa3D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IAChB1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KAUVgB,SAAW,SAAAD,GACPd,EAAKD,MAAMgB,SAASD,EAAME,OAAOJ,OACjCZ,EAAKsB,SAAS,CAACV,MAAOE,EAAME,OAAOJ,SAXnCZ,EAAKkB,MAAQ,CACTN,MAAOZ,EAAKD,MAAMa,OAAS,IAHfZ,yFAOOD,GACvBI,KAAKmB,SAAS,CAAEV,MAAOb,EAAMa,yCAQvB,IAAA0C,EAC4BnD,KAAKJ,MAA/BwD,EADFD,EACEC,KAAMd,EADRa,EACQb,MAAOe,EADfF,EACeE,SACf1B,EAAKsB,IAEX,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,QAASV,GACXW,GAELL,EAAAC,EAAAC,cAAA,SACIS,KAAK,OACLS,SAAUA,EACV5C,MAAOT,KAAKe,MAAMN,MAClBG,SAAUZ,KAAKY,SACfe,GAAIA,EACJyB,KAAMA,EACNb,UAAU,kBAjCNQ,IAAMC,WCQfQ,EATX,SAAAA,IAAiF,IAApEC,EAAoEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3D,EAAGN,EAAwDM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjD,GAAIG,EAA6CH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,GAAII,EAAkCJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvB,GAAI/B,EAAmB+B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAdT,IAAcnD,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,GAC7ExD,KAAKyD,OAASA,EACdzD,KAAKoD,KAAOA,EACZpD,KAAK6D,KAAOA,EACZ7D,KAAK8D,SAAWA,EAChB9D,KAAK2B,GAAKA,GC+EHoC,cA7EX,SAAAA,EAAYnE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACflE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KASVoE,WAAa,SAAAC,GAET,GADAA,EAAEC,iBACErE,EAAKkB,MAAM+C,SAAU,CACrB,IAAMK,EAAU,IAAIX,EAAQY,OAAOvE,EAAKkB,MAAM0C,QAAS5D,EAAKkB,MAAMqC,KAAMvD,EAAKkB,MAAM8C,KAAMhE,EAAKkB,MAAM+C,UACpGjE,EAAKD,MAAMoE,WAAWG,GACtBtE,EAAKwE,mBAELC,MAAM,iBAjBKzE,EAqBnBwE,YAAc,WACVxE,EAAKsB,SAAS,CAAEsC,OAAQ,GAAIL,KAAM,GAAIS,KAAM,GAAIC,SAAU,MAtB3CjE,EAyBnB0E,WAAa,SAACC,EAAW/D,GACrBZ,EAAKsB,SAALrB,OAAA2E,EAAA,EAAA3E,CAAA,GAAiB0E,EAAY/D,KA1BdZ,EA6BnB6E,oBAAsB,SAAApD,GAClBzB,EAAKD,MAAM8B,cAAcJ,IA5BzBzB,EAAKkB,MAAQ,CACT0C,OAAQ,GACRL,KAAM,GACNS,KAAM,GACNC,SAAU,IANCjE,wEAiCV,IAAA8E,EAAA3E,KACL,OACQiC,EAAAC,EAAAC,cAAA,WAASI,UAAU,oBACfN,EAAAC,EAAAC,cAAA,MAAII,UAAU,WAAd,gBACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,6BAAd,qDACAN,EAAAC,EAAAC,cAAA,QAAMyC,SAAU5E,KAAKgE,WAAYzB,UAAU,QACvCN,EAAAC,EAAAC,cAAC0C,EAAD,CACIzB,KAAK,SACLd,MAAM,iBACNe,UAAU,EACV5C,MAAOT,KAAKe,MAAM0C,OAClBZ,YAAY,MACZjC,SAAU,SAAAH,GAAK,OAAIkE,EAAKJ,WAAW,SAAU9D,MACjDwB,EAAAC,EAAAC,cAAC2C,EAAD,CACIxC,MAAM,sBACNc,KAAK,OACLC,UAAU,EACV5C,MAAOT,KAAKe,MAAMqC,KAClBP,YAAY,UACZjC,SAAU,SAAAH,GAAK,OAAIkE,EAAKJ,WAAW,OAAQ9D,MAC/CwB,EAAAC,EAAAC,cAAC4C,EAAD,CACIzC,MAAM,uBACNc,KAAK,OACLC,UAAU,EACV5C,MAAOT,KAAKe,MAAM8C,KAClBhB,YAAY,iBACZjC,SAAU,SAAAH,GAAK,OAAIkE,EAAKJ,WAAW,OAAQ9D,MAC/CwB,EAAAC,EAAAC,cAAC6C,EAAD,CACIhE,QAAShB,KAAKJ,MAAMoB,QACpBU,cAAe1B,KAAK0E,oBACpBpC,MAAM,0BACNc,KAAK,WACLC,UAAU,EACV5C,MAAOT,KAAKe,MAAM+C,SAClBlD,SAAU,SAAAH,GAAK,OAAIkE,EAAKJ,WAAW,WAAY9D,MACnDwB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQI,UAAU,0BAAlB,iBAtENQ,IAAMC,WC2FbiC,cA5FX,SAAAA,EAAYrF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACfpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMJ,KAYVsF,aAAe,WACXrF,EAAKsB,SAAS,CAAEa,cAAc,EAAOmD,eAAgBtF,EAAKkB,MAAMoD,WAdjDtE,EAiBnBuF,WAAa,SAAAzE,GACTA,EAAMuD,iBACNrE,EAAKsB,SAAS,CAAEa,cAAc,EAAOmC,QAAStE,EAAKkB,MAAMoE,gBACrD,kBAAMtF,EAAKD,MAAMyF,cAAcxF,EAAKkB,MAAMoD,YApB/BtE,EAuBnByF,WAAa,SAAA3E,GACTA,EAAMuD,iBACNrE,EAAKsB,SAAS,CAAEa,cAAc,KAzBfnC,EA4BnB0F,aAAe,WACX1F,EAAKD,MAAM4F,cAAc3F,EAAKkB,MAAMoD,QAAQxC,KA7B7B9B,EAgCnBwF,cAAgB,SAACb,EAAW/D,GACxBZ,EAAKsB,SAAS,CAAEgE,eAAgBrF,OAAO0B,OAAO,GAAI3B,EAAKkB,MAAMoE,eAA7BrF,OAAA2E,EAAA,EAAA3E,CAAA,GAAgD0E,EAAY/D,OA/B5FZ,EAAKkB,MAAQ,CACTiB,cAAc,EACdmC,QAAStE,EAAKD,MAAMuE,QACpBgB,eAAgBtF,EAAKD,MAAMuE,SALhBtE,yFASQD,GACvBI,KAAKmB,SAAS,CAAEgD,QAASvE,EAAMuE,2CA0B1B,IAAAQ,EAAA3E,KACL,OACIiC,EAAAC,EAAAC,cAAA,MAAII,UAAU,sBAENvC,KAAKe,MAAMiB,aACXC,EAAAC,EAAAC,cAAA,QAAMyC,SAAU5E,KAAKoF,WAAY7C,UAAU,QACvCN,EAAAC,EAAAC,cAAC0C,EAAD,CACIzB,KAAK,SACLd,MAAM,iBACNe,UAAU,EACV5C,MAAOT,KAAKe,MAAMoE,eAAe1B,OACjCZ,YAAY,iBACZjC,SAAU,SAAAH,GAAK,OAAIkE,EAAKU,cAAc,UAAW5E,MACrDwB,EAAAC,EAAAC,cAAC2C,EAAD,CACIxC,MAAM,sBACNc,KAAK,OACLC,UAAU,EACV5C,MAAOT,KAAKe,MAAMoE,eAAe/B,KACjCP,YAAY,sBACZjC,SAAU,SAAAH,GAAK,OAAIkE,EAAKU,cAAc,OAAQ5E,MAClDwB,EAAAC,EAAAC,cAAC4C,EAAD,CACIzC,MAAM,uBACNc,KAAK,OACLC,UAAU,EACV5C,MAAOT,KAAKe,MAAMoE,eAAetB,KACjChB,YAAY,iBACZjC,SAAU,SAAAH,GAAK,OAAIkE,EAAKU,cAAc,OAAQ5E,MAClDwB,EAAAC,EAAAC,cAAC6C,EAAD,CACIhE,QAAShB,KAAKJ,MAAMoB,QACpBsB,MAAM,WACNc,KAAK,WACLC,UAAU,EACV5C,MAAOT,KAAKe,MAAMoE,eAAerB,SACjC9B,aAAchC,KAAKe,MAAMiB,aACzBpB,SAAU,SAAAH,GAAK,OAAIkE,EAAKU,cAAc,WAAY5E,MACtDwB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,iDAAlB,QACAN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,wBAAwBK,KAAK,SAASE,QAAS9C,KAAKkF,cAAtE,YAGRjD,EAAAC,EAAAC,cAAA,QAAMyC,SAAU5E,KAAKsF,YACjBrD,EAAAC,EAAAC,cAAA,uBAAenC,KAAKe,MAAMoD,QAAQV,QAAcxB,EAAAC,EAAAC,cAAA,WAChDF,EAAAC,EAAAC,cAAA,qBAAanC,KAAKe,MAAMoD,QAAQf,MAAYnB,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,qBAAanC,KAAKe,MAAMoD,QAAQN,MAAY5B,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,yBAAiBnC,KAAKe,MAAMoD,QAAQL,UAAgB7B,EAAAC,EAAAC,cAAA,WACpDF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,qBACXN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,uBAAlB,QACAN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,wBAAwBK,KAAK,SAASE,QAAS9C,KAAKuF,cAAtE,oBApFFxC,IAAMC,2BCuMjByC,cA1MX,SAAAA,EAAY7F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACf5F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2F,GAAAtF,KAAAH,KAAMJ,KACDmB,MAAQ,CACTN,MAAO,GACPiF,SAAU9F,EAAM8F,SAChBC,wBAAyB,CAAC,CAAEC,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,IAC7ZC,iBAAkB,CAAC,CAAEC,MAAO,UAAWH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,WAAYH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,QAASH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,QAASH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,MAAOH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,OAAQH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,OAAQH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,SAAUH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,YAAaH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,UAAWH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,WAAYH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,IAAM,CACxnBsD,MAAO,WAAYH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,KAEvDuD,oBAAqBpG,EAAKD,MAAMoB,QAAQkF,OAAO,SAAAhF,GAAM,OAAIA,EAAOT,QAAOgC,IAAI,SAAAvB,GAAM,OAAIpB,OAAO0B,OAAO,GAAI,CAAEsC,SAAU5C,EAAOT,MAAOoF,MAAO,EAAGC,WAAY,OAT5IjG,mFAcfG,KAAKmG,UAAUnG,KAAKJ,yDAGEA,GACtBI,KAAKmG,UAAUvG,iDAGGA,GAAO,IAAA+E,EAAA3E,KACzBA,KAAKmB,SAAS,CACVuE,SAAU9F,EAAM8F,SAChBC,wBAAyB,CAAC,CAAEC,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,GAAK,CAAEF,aAAc,EAAGxC,KAAM,GAAIyC,MAAO,EAAGC,WAAY,IAC7ZC,iBAAkB,CAAC,CAAEC,MAAO,UAAWH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,WAAYH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,QAASH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,QAASH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,MAAOH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,OAAQH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,OAAQH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,SAAUH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,YAAaH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,UAAWH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,GAAK,CAAEsD,MAAO,WAAYH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,IAAM,CACxnBsD,MAAO,WAAYH,MAAO,EAAGC,WAAY,EAAGpD,MAAO,KAEvDuD,oBAAqBrG,EAAMoB,QAAQkF,OAAO,SAAAhF,GAAM,OAAIA,EAAOT,QAAOgC,IAAI,SAAAvB,GAAM,OAAIpB,OAAO0B,OAAO,GAAI,CAAEsC,SAAU5C,EAAOT,MAAOoF,MAAO,EAAGC,WAAY,OACnJ,kBAAMnB,EAAKyB,wEAId,IAAIC,EAAiCrG,KAAKe,MAAM4E,wBAAwBlD,IAAI,SAAAkD,GAAuB,OAAIW,IAAEC,MAAMZ,KACzGE,EAAQ7F,KAAKe,MAAM2E,SAASjD,IAAI,SAAA0B,GAAO,OAAIA,EAAQV,SAAQ+C,OAAO,SAACC,EAASC,GAAV,OAAoBD,EAAUC,GAAM,GAC5G1G,KAAKe,MAAM2E,SAASiB,QAAQ,SAAAxC,GACxB,IAAMyC,EAAW,IAAIC,KAAK1C,EAAQN,MAAMiD,SAAW,IAAID,KAAK1C,EAAQN,MAAMiD,SAAW,EAAI,EACzFT,EAA+BO,GAAUf,QAAU1B,EAAQV,OAC3D4C,EAA+BO,GAAUd,YAAcO,EAA+BO,GAAUf,MAAQA,EAAQ,KAAKkB,QAAQ,KAEjI/G,KAAKmB,SAAS,CAAEwE,wBAAyBU,qDAGpBzG,GAAO,IAAAoH,EAAAhH,KAC5BA,KAAKmB,SAAS,CAAEuE,SAAU9F,EAAM8F,UAAY,kBAAMsB,EAAKC,8EAIvD,IAAIC,EAA0BlH,KAAKe,MAAMgF,iBAAiBtD,IAAI,SAAA0E,GAAe,OAAIb,IAAEC,MAAMY,KACnFtB,EAAQ7F,KAAKe,MAAM2E,SAASjD,IAAI,SAAA0B,GAAO,OAAIA,EAAQV,SAAQ+C,OAAO,SAACC,EAASC,GAAV,OAAoBD,EAAUC,GAAM,GAC5G1G,KAAKe,MAAM2E,SAASiB,QAAQ,SAAAxC,GACxB,IAAMiD,EAAa,IAAIP,KAAK1C,EAAQN,MAAMwD,WAC1CH,EAAwBE,GAAYvB,QAAU1B,EAAQV,SAE1DzD,KAAKe,MAAM2E,SAASiB,QAAQ,SAAAxC,GACxB,IAAMiD,EAAa,IAAIP,KAAK1C,EAAQN,MAAMwD,WAC1CH,EAAwBE,GAAYtB,aAAeoB,EAAwBE,GAAYvB,OAASA,EAAQ,KAAKkB,QAAQ,KAGzH/G,KAAKmB,SAAS,CAAE4E,iBAAkBmB,wDAGVtH,GAAO,IAAA0H,EAAAtH,KAC/BA,KAAKmB,SAAS,CAAEuE,SAAU9F,EAAM8F,UAAY,kBAAM4B,EAAKC,oFAIvD,IAAIC,EAA6BxH,KAAKe,MAAMkF,oBAAoBxD,IAAI,SAAAgF,GAAkB,OAAInB,IAAEC,MAAMkB,KAC5F5B,EAAQ7F,KAAKe,MAAM2E,SAASjD,IAAI,SAAA0B,GAAO,OAAIA,EAAQV,SAAQ+C,OAAO,SAACC,EAASC,GAAV,OAAoBD,EAAUC,GAAM,GAC5G1G,KAAKe,MAAM2E,SAASiB,QAAQ,SAAAxC,GACxBqD,EAA2Bb,QAAQ,SAAAe,GAC3BA,EAA0B5D,WAAaK,EAAQL,WAC/C4D,EAA0B7B,QAAU1B,EAAQV,UAGpD+D,EAA2Bb,QAAQ,SAAAe,GAC/BA,EAA0B5B,aAAe4B,EAA0B7B,MAAQA,EAAQ,KAAKkB,QAAQ,OAGxG/G,KAAKmB,SAAS,CAAE8E,oBAAqBuB,sCAGnC5H,GACNI,KAAK2H,sBAAsB/H,GAC3BI,KAAK4H,yBAAyBhI,GAC9BI,KAAK6H,4BAA4BjI,oCAIjC,OACIqC,EAAAC,EAAAC,cAAA,WAASI,UAAU,SACfN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,SACbN,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBAIRF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBAEInC,KAAKe,MAAMgF,iBAAiBtD,IAAI,SAAC0E,EAAiBzE,GAAlB,OAC5BT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQyE,EAAgBtB,UAI7C5D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBAEInC,KAAKe,MAAMgF,iBAAiBtD,IAAI,SAAC0E,EAAiBzE,GAAlB,OAC5BT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQyE,EAAgBrB,WAAjC,WAOpB7D,EAAAC,EAAAC,cAAA,SAAOI,UAAU,SACbN,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aAEIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBAEInC,KAAKe,MAAM4E,wBAAwBlD,IAAI,SAACqF,EAAgBpF,GAAjB,OACnCT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQoF,EAAejC,UAK5C5D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBAEInC,KAAKe,MAAM4E,wBAAwBlD,IAAI,SAACqF,EAAgBpF,GAAjB,OACnCT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQoF,EAAehC,WAAhC,WAOpB7D,EAAAC,EAAAC,cAAA,SAAOI,UAAU,SACbN,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBAEInC,KAAKe,MAAMkF,oBAAoBxD,IAAI,SAACgF,EAAoB/E,GAArB,OAC/BT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQ+E,EAAmB3D,cAMpD7B,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBAEInC,KAAKe,MAAMkF,oBAAoBxD,IAAI,SAACgF,EAAoB/E,GAArB,OAC/BT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQ+E,EAAmB5B,UAIhD5D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wBAEInC,KAAKe,MAAMkF,oBAAoBxD,IAAI,SAACgF,EAAoB/E,GAArB,OAC/BT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GAAQ+E,EAAmB3B,WAApC,mBA/LZ/C,IAAMC,iBCgCX+E,MA9Bf,SAAqBnI,GACjB,OACIqC,EAAAC,EAAAC,cAAA,WAASI,UAAU,gBAEX3C,EAAM8F,SAAS/B,OACnB1B,EAAAC,EAAAC,cAAA,MAAII,UAAU,6BAAd,kBACE,KAEFN,EAAAC,EAAAC,cAAA,MAAII,UAAU,iBAEN3C,EAAM8F,SAASjD,IAAI,SAAC0B,EAASzB,GAAV,OACfT,EAAAC,EAAAC,cAAC6F,EAAD,CACIrF,IAAKD,EACLyB,QAASA,EACTkB,cAAezF,EAAMyF,cACrBG,cAAe5F,EAAM4F,cACrBxE,QAASpB,EAAMoB,aAK3BpB,EAAM8F,SAAS/B,OACX1B,EAAAC,EAAAC,cAAC8F,EAAD,CAAOvC,SAAU9F,EAAM8F,SAChB1E,QAASpB,EAAMoB,UACpB,OCoEPkH,cA1FX,SAAAA,EAAYtI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,IACfrI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoI,GAAA/H,KAAAH,KAAMJ,KAeVuI,kBAAoB,WAChBtI,EAAKuI,+BACLC,OAAOC,iBACP,eACAzI,EAAK0I,0BApBU1I,EAwBnB2I,qBAAuB,WACnBH,OAAOI,oBACP,eACA5I,EAAK0I,yBAEL1I,EAAK0I,2BA7BU1I,EAgCnBuI,6BAA+B,WAC3B,IAAK,IAAIzF,KAAO9C,EAAKkB,MACnB,GAAIV,aAAaqI,eAAe/F,GAAM,CACpC,IAAIlC,EAAQJ,aAAaC,QAAQqC,GACjC,IACElC,EAAQF,KAAKC,MAAMC,GACnBZ,EAAKsB,SAALrB,OAAA2E,EAAA,EAAA3E,CAAA,GAAiB6C,EAAMlC,IACvB,MAAOwD,GACPpE,EAAKsB,SAALrB,OAAA2E,EAAA,EAAA3E,CAAA,GAAiB6C,EAAMlC,OAxCdZ,EA8CnB0I,wBAA0B,WACtB,IAAK,IAAI5F,KAAO9C,EAAKkB,MACnBV,aAAasI,QAAQhG,EAAKpC,KAAKqI,UAAU/I,EAAKkB,MAAM4B,MAhDvC9C,EAoDnBmE,WAAa,SAAAG,GACTtE,EAAKsB,SAAS,CAAEuE,SAAQ,GAAAmD,OAAA/I,OAAAgJ,EAAA,EAAAhJ,CAAMD,EAAKkB,MAAM2E,UAAjB,CAA2BvB,OArDpCtE,EAwDnB2F,cAAgB,SAAA7D,GACZ,IAAMoH,EAAkBzC,IAAE7D,IAAI5C,EAAKkB,MAAM2E,SAAUY,IAAEC,OAChDL,OAAO,SAAA/B,GAAO,OAAIA,EAAQxC,KAAOA,IACtC9B,EAAKsB,SAAS,CAAEuE,SAAUqD,KA3DXlJ,EA8DnBwF,cAAgB,SAAAF,GACZ,IAAM4D,EAAkBzC,IAAE7D,IAAI5C,EAAKkB,MAAM2E,SAAUY,IAAEC,OAChD9D,IAAI,SAAA0B,GAAO,OAAIA,EAAQxC,KAAOwD,EAAexD,GAAKwD,EAAiBhB,IACxEtE,EAAKsB,SAAS,CAAEuE,SAAUqD,KAjEXlJ,EAoEnB6B,cAAgB,SAAAJ,GACZzB,EAAKsB,SAAS,CAAEH,QAAO,GAAA6H,OAAA/I,OAAAgJ,EAAA,EAAAhJ,CAAMD,EAAKkB,MAAMC,SAAjB,CAA0BM,OAnEjDzB,EAAKkB,MAAQ,CACT2E,SAAU,GACV1E,QAAS,CACL,CAAES,aAAc,2BAA4BhB,MAAO,IACnD,CAAEgB,aAAc,YAAahB,MAAO,aACpC,CAAEgB,aAAc,OAAQhB,MAAO,QAC/B,CAAEgB,aAAc,QAAShB,MAAO,SAChC,CAAEgB,aAAc,UAAWhB,MAAO,WAClC,CAAEgB,aAAc,iBAAkBhB,MAAO,kBACzC,CAAEgB,aAAc,OAAQhB,MAAO,UAXxBZ,wEAyEf,OACIoC,EAAAC,EAAAC,cAAA,MAAArC,OAAA2E,EAAA,EAAA3E,CAAA,CAAKyC,UAAU,OAAf,YAAkCvC,KAAKe,MAAM2E,SAAS/B,OAAyB,MAAhB,eAC3D1B,EAAAC,EAAAC,cAAC6G,EAAD,CACIhF,WAAYhE,KAAKgE,WACjB0B,SAAU1F,KAAKe,MAAM2E,SACrB1E,QAAShB,KAAKe,MAAMC,QACpBU,cAAe1B,KAAK0B,gBACxBO,EAAAC,EAAAC,cAAC8G,EAAD,CACIvD,SAAU1F,KAAKe,MAAM2E,SACrBL,cAAerF,KAAKqF,cACpBG,cAAexF,KAAKwF,cACpBxE,QAAShB,KAAKe,MAAMC,kBArFtB+B,IAAMC,WCMlBkG,EAAcC,QACW,cAA7Bd,OAAOe,SAASC,UAEe,UAA7BhB,OAAOe,SAASC,UAEhBhB,OAAOe,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjJ,QACf2I,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAO1I,EAAAC,EAAAC,cAACyI,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,mCAAwB3C,OAAOe,SAAS6B,MACpDC,SAAW7C,OAAOe,SAAS8B,OAIvC,OAGF7C,OAAOC,iBAAiB,OAAQ,WAC9B,IAAMkB,EAAK,GAAAX,OAAMmC,mCAAN,sBAEP9B,GAgEV,SAAiCM,EAAOC,GAEtC0B,MAAM3B,GACHK,KAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BxB,OAAOe,SAASwC,aAKpBrC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.977955ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport './addForm.css';\r\nimport '../components/inputs.css';\r\n\r\nclass Dropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            selected: this.props.value || this.getSelectedValue(),\r\n            newOption: '',\r\n            options: this.props.options\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({ selected: props.value, options: props.options });\r\n    }\r\n\r\n    getSelectedValue = () => {\r\n        return (localStorage.getItem('options') && JSON.parse(localStorage.getItem('options'))[0].value) || '';\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.props.onChange(event.target.value);\r\n        const selectedOption = this.state.options.find(option => option.value === event.target.value);\r\n        this.setState({ selected: selectedOption.value });\r\n    }\r\n\r\n    getNewOption = event => {\r\n        this.setState({ newOption: event.target.value });\r\n    }\r\n\r\n    addOption = () => {\r\n        const newOption = Object.assign({}, {displayValue: this.state.newOption, value: this.state.newOption});\r\n        this.props.updateOptions(newOption);\r\n        this.setState({ newOption: ''});\r\n    }\r\n\r\n    render () {\r\n        const isDisabled = this.props.isDisabled;\r\n        const isInEditMode = this.props.isInEditMode;\r\n        return (\r\n            <> { \r\n                isInEditMode ? \r\n                <div>\r\n                    <label htmlFor={this.state.id}>\r\n                        {this.props.label}\r\n                    </label>\r\n                    <select className=\"input\" id={this.state.id} onChange={this.handleChange} disabled={isDisabled} value={this.state.selected}>\r\n                        {\r\n                            this.state.options.map((option, index) =>\r\n                                <option value={option.value} key={index}>\r\n                                    {option.displayValue}\r\n                                </option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                </div>\r\n                    : \r\n                <>\r\n                    <div>\r\n                        <label htmlFor={this.state.id}>\r\n                            {this.props.label}\r\n                        </label>\r\n                        <select id={this.state.id} className=\"input\" onChange={this.handleChange} disabled={isDisabled} value={this.state.selected}>\r\n                            {\r\n                                this.state.options.map((option, index) =>\r\n                                    <option value={option.value} key={index}>\r\n                                        {option.displayValue}\r\n                                    </option>\r\n                                )\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label>Add a category</label>  \r\n                        <input type=\"text\" placeholder=\"Enter new category\" className=\"input\" value={this.state.newOption} onChange={this.getNewOption}></input>\r\n                        <button type=\"button\" className=\"button button--category\" onClick={this.addOption}>Add a category</button>\r\n                    </div>\r\n                </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Dropdown;","const generateId = () => Math.floor(Math.random() * 1000);\r\n\r\nexport default generateId;","import React from 'react';\r\nimport generateId from '../helpers/id';\r\nimport '../components/inputs.css';\r\n\r\nclass InputNumber extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || ''\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({ value: props.value });\r\n    }\r\n\r\n    onChange = event => {\r\n        this.props.onChange(event.target.value);\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    render () {\r\n        const { name, label, placeholder, required } = this.props;\r\n        const id = generateId();\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor={id}>\r\n                    {label}\r\n                </label>\r\n                <input\r\n                    type=\"number\"\r\n                    required={required}\r\n                    placeholder={placeholder}\r\n                    value={this.state.value}\r\n                    onChange={this.onChange}\r\n                    id={id}\r\n                    name={name}\r\n                    className=\"input\" />\r\n            </div>\r\n        );   \r\n    }\r\n}\r\n\r\nexport default InputNumber;","import React from 'react';\r\nimport generateId from '../helpers/id';\r\nimport '../components/inputs.css';\r\n\r\nclass InputText extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || ''\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({ value: props.value });\r\n    }\r\n\r\n    onChange = event => {\r\n        this.props.onChange(event.target.value);\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    render () {\r\n        const { name, label, placeholder, required } = this.props;\r\n        const id = generateId();\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor={id}>\r\n                    {label}\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={placeholder}\r\n                    required={required}\r\n                    value={this.state.value}\r\n                    onChange={this.onChange}\r\n                    id={id}\r\n                    name={name} \r\n                    className=\"input\" />\r\n            </div>\r\n        );   \r\n    }\r\n}\r\n\r\nexport default InputText;","import React from 'react';\r\nimport generateId from '../helpers/id';\r\nimport '../components/inputs.css';\r\n\r\nclass InputDate extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || ''\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({ value: props.value });\r\n    }\r\n\r\n    onChange = event => {\r\n        this.props.onChange(event.target.value);\r\n        this.setState({value: event.target.value})\r\n    }\r\n\r\n    render () {\r\n        const { name, label, required } = this.props;\r\n        const id = generateId();\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor={id}>\r\n                    {label}\r\n                </label>\r\n                <input\r\n                    type=\"date\"\r\n                    required={required}\r\n                    value={this.state.value}\r\n                    onChange={this.onChange}\r\n                    id={id}\r\n                    name={name}\r\n                    className=\"input\" />\r\n            </div>\r\n        );   \r\n    }\r\n}\r\n\r\nexport default InputDate;","import generateId from '../helpers/id';\r\n\r\nclass Expense {\r\n    constructor (amount = 0, name = '', date = '', category = '', id = generateId()) {\r\n        this.amount = amount;\r\n        this.name = name;\r\n        this.date = date;\r\n        this.category = category;\r\n        this.id = id;\r\n    }\r\n}\r\n\r\nexport default Expense;","import React from 'react';\r\nimport Dropdown from './dropdown';\r\nimport InputNumber from './input-number';\r\nimport InputText from './input-text';\r\nimport InputDate from './input-date';\r\nimport Expense from '../helpers/expense';\r\nimport './addForm.css';\r\nimport './inputs.css';\r\n\r\nclass AddForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            amount: '',\r\n            name: '',\r\n            date: '',\r\n            category: ''\r\n        };\r\n    }\r\n\r\n    addExpense = e => {\r\n        e.preventDefault();\r\n        if (this.state.category) {\r\n            const expense = new Expense(Number(this.state.amount), this.state.name, this.state.date, this.state.category);\r\n            this.props.addExpense(expense);\r\n            this.clearInputs(); \r\n        } else {\r\n            alert(\"Add category\");\r\n        }\r\n    };\r\n\r\n    clearInputs = () => {\r\n        this.setState({ amount: '', name: '', date: '', category: '' });\r\n    }\r\n\r\n    updateForm = (formField, value) => {\r\n        this.setState({ [formField]: value });\r\n    }\r\n\r\n    handleUpdateOptions = newOption => {\r\n        this.props.updateOptions(newOption);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <section className=\"add-form-section\">\r\n                    <h2 className=\"heading\">Expenser app</h2>\r\n                    <h3 className=\"heading heading--tertiary\">Find the magic hole where all your money goes to!</h3>\r\n                    <form onSubmit={this.addExpense} className=\"form\">\r\n                        <InputNumber\r\n                            name=\"amount\"\r\n                            label=\"Expense amount\"\r\n                            required={true}\r\n                            value={this.state.amount}\r\n                            placeholder=\"10$\"\r\n                            onChange={value => this.updateForm('amount', value)} />\r\n                        <InputText\r\n                            label=\"Name of the product\"\r\n                            name=\"name\"\r\n                            required={true}\r\n                            value={this.state.name}\r\n                            placeholder=\"T-shirt\"\r\n                            onChange={value => this.updateForm('name', value)} />\r\n                        <InputDate\r\n                            label=\"Date of the purchase\"\r\n                            name=\"date\"\r\n                            required={true}\r\n                            value={this.state.date}\r\n                            placeholder=\"Enter the date\"\r\n                            onChange={value => this.updateForm('date', value)} />\r\n                        <Dropdown\r\n                            options={this.props.options}\r\n                            updateOptions={this.handleUpdateOptions}\r\n                            label=\"Category of the expense\"\r\n                            name=\"category\"\r\n                            required={true}\r\n                            value={this.state.category}\r\n                            onChange={value => this.updateForm('category', value)} />\r\n                        <div>\r\n                            <button className=\"button button--expense\">Add</button>\r\n                        </div>\r\n                    </form>\r\n                </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport Dropdown from './dropdown';\r\nimport InputNumber from './input-number';\r\nimport InputText from './input-text';\r\nimport InputDate from './input-date';\r\nimport '../components/inputs.css';\r\n\r\nclass ExpenseItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isInEditMode: false,\r\n            expense: this.props.expense,\r\n            updatedExpense: this.props.expense\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({ expense: props.expense });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ isInEditMode: false, updatedExpense: this.state.expense });\r\n    }\r\n\r\n    handleSave = event => {\r\n        event.preventDefault();\r\n        this.setState({ isInEditMode: false, expense: this.state.updatedExpense },\r\n            () => this.props.updateExpense(this.state.expense));\r\n    }\r\n\r\n    handleEdit = event => {\r\n        event.preventDefault();\r\n        this.setState({ isInEditMode: true });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.deleteExpense(this.state.expense.id);\r\n    }\r\n\r\n    updateExpense = (formField, value) => {\r\n        this.setState({ updatedExpense: Object.assign({}, this.state.updatedExpense, { [formField]: value }) });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"expense-list__item\">\r\n                {\r\n                    this.state.isInEditMode ?\r\n                    <form onSubmit={this.handleSave} className=\"form\">\r\n                        <InputNumber\r\n                            name=\"amount\"\r\n                            label=\"Expense amount\"\r\n                            required={true}\r\n                            value={this.state.updatedExpense.amount}\r\n                            placeholder=\"Expense amount\"\r\n                            onChange={value => this.updateExpense('amount', +value)} />\r\n                        <InputText\r\n                            label=\"Name of the product\"\r\n                            name=\"name\"\r\n                            required={true}\r\n                            value={this.state.updatedExpense.name}\r\n                            placeholder=\"Name of the product\"\r\n                            onChange={value => this.updateExpense('name', value)} />\r\n                        <InputDate\r\n                            label=\"Date of the purchase\"\r\n                            name=\"date\"\r\n                            required={true}\r\n                            value={this.state.updatedExpense.date}\r\n                            placeholder=\"Enter the date\"\r\n                            onChange={value => this.updateExpense('date', value)} />\r\n                        <Dropdown\r\n                            options={this.props.options}\r\n                            label=\"Category\"\r\n                            name=\"category\"\r\n                            required={true}\r\n                            value={this.state.updatedExpense.category}\r\n                            isInEditMode={this.state.isInEditMode}\r\n                            onChange={value => this.updateExpense('category', value)} />\r\n                        <div className=\"buttons-container\">\r\n                            <button className=\"button button--expense button--expense-update\">Save</button>\r\n                            <button className=\"button button--delete\" type=\"button\" onClick={this.handleCancel}>Cancel</button>\r\n                        </div>\r\n                    </form> :\r\n                    <form onSubmit={this.handleEdit}>\r\n                        <span>Amount: {this.state.expense.amount}</span><br/>\r\n                        <span>Name: {this.state.expense.name}</span><br/>\r\n                        <span>Date: {this.state.expense.date}</span><br/>\r\n                        <span>Category: {this.state.expense.category}</span><br/>\r\n                        <div className=\"buttons-container\">\r\n                            <button className=\"button button--edit\">Edit</button>\r\n                            <button className=\"button button--delete\" type=\"button\" onClick={this.handleDelete}>Delete</button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport _ from 'underscore';\r\n\r\nclass Stats extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            expenses: props.expenses,\r\n            expensesPerDayOfTheWeek: [{ dayOfTheWeek: 0, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 1, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 2, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 3, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 4, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 5, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 6, name: '', total: 0, percentage: 0 }],\r\n            expensesPerMonth: [{ month: 'January', total: 0, percentage: 0, index: 0 }, { month: 'February', total: 0, percentage: 0, index: 1 }, { month: 'March', total: 0, percentage: 0, index: 2 }, { month: 'April', total: 0, percentage: 0, index: 3 }, { month: 'May', total: 0, percentage: 0, index: 4 }, { month: 'June', total: 0, percentage: 0, index: 5 }, { month: 'July', total: 0, percentage: 0, index: 6 }, { month: 'August', total: 0, percentage: 0, index: 7 }, { month: 'September', total: 0, percentage: 0, index: 8 }, { month: 'October', total: 0, percentage: 0, index: 9 }, { month: 'November', total: 0, percentage: 0, index: 10 }, {\r\n                month: 'December', total: 0, percentage: 0, index: 11\r\n            }],\r\n            expensesPerCategory: this.props.options.filter(option => option.value).map(option => Object.assign({}, { category: option.value, total: 0, percentage: 0 }))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setValues(this.props);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setValues(props);\r\n    }\r\n\r\n    setDayOfTheWeekValues(props) {\r\n        this.setState({\r\n            expenses: props.expenses,\r\n            expensesPerDayOfTheWeek: [{ dayOfTheWeek: 0, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 1, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 2, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 3, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 4, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 5, name: '', total: 0, percentage: 0 }, { dayOfTheWeek: 6, name: '', total: 0, percentage: 0 }],\r\n            expensesPerMonth: [{ month: 'January', total: 0, percentage: 0, index: 0 }, { month: 'February', total: 0, percentage: 0, index: 1 }, { month: 'March', total: 0, percentage: 0, index: 2 }, { month: 'April', total: 0, percentage: 0, index: 3 }, { month: 'May', total: 0, percentage: 0, index: 4 }, { month: 'June', total: 0, percentage: 0, index: 5 }, { month: 'July', total: 0, percentage: 0, index: 6 }, { month: 'August', total: 0, percentage: 0, index: 7 }, { month: 'September', total: 0, percentage: 0, index: 8 }, { month: 'October', total: 0, percentage: 0, index: 9 }, { month: 'November', total: 0, percentage: 0, index: 10 }, {\r\n                month: 'December', total: 0, percentage: 0, index: 11\r\n            }],\r\n            expensesPerCategory: props.options.filter(option => option.value).map(option => Object.assign({}, { category: option.value, total: 0, percentage: 0 }))\r\n        }, () => this.dayOfTheWeekCallback());\r\n    }\r\n\r\n    dayOfTheWeekCallback() {\r\n        let updatedExpensesPerDayOfTheWeek = this.state.expensesPerDayOfTheWeek.map(expensesPerDayOfTheWeek => _.clone(expensesPerDayOfTheWeek));\r\n        const total = this.state.expenses.map(expense => expense.amount).reduce((current, next) => +current + next, 0);\r\n        this.state.expenses.forEach(expense => {\r\n            const dayIndex = new Date(expense.date).getDay() ? new Date(expense.date).getDay() - 1 : 6;\r\n            updatedExpensesPerDayOfTheWeek[dayIndex].total += +expense.amount;\r\n            updatedExpensesPerDayOfTheWeek[dayIndex].percentage = (updatedExpensesPerDayOfTheWeek[dayIndex].total / total * 100).toFixed(2);\r\n        });\r\n        this.setState({ expensesPerDayOfTheWeek: updatedExpensesPerDayOfTheWeek });\r\n    }\r\n\r\n    setExpensePerMonthValues(props) {\r\n        this.setState({ expenses: props.expenses }, () => this.expensePerMonthCallback());\r\n    }\r\n\r\n    expensePerMonthCallback() {\r\n        let updatedExpensesPerMonth = this.state.expensesPerMonth.map(expensePerMonth => _.clone(expensePerMonth));\r\n        const total = this.state.expenses.map(expense => expense.amount).reduce((current, next) => +current + next, 0);\r\n        this.state.expenses.forEach(expense => {\r\n            const monthIndex = new Date(expense.date).getMonth();\r\n            updatedExpensesPerMonth[monthIndex].total += +expense.amount;\r\n        });\r\n        this.state.expenses.forEach(expense => {\r\n            const monthIndex = new Date(expense.date).getMonth();\r\n            updatedExpensesPerMonth[monthIndex].percentage = (+updatedExpensesPerMonth[monthIndex].total / +total * 100).toFixed(2);\r\n        });\r\n\r\n        this.setState({ expensesPerMonth: updatedExpensesPerMonth });\r\n    }\r\n\r\n    setExpensePerCategoryValues(props) {\r\n        this.setState({ expenses: props.expenses }, () => this.expensePerCategoryCallback());\r\n    }\r\n\r\n    expensePerCategoryCallback() {\r\n        let updatedExpensesPerCategory = this.state.expensesPerCategory.map(expensePerCategory => _.clone(expensePerCategory));\r\n        const total = this.state.expenses.map(expense => expense.amount).reduce((current, next) => +current + next, 0);\r\n        this.state.expenses.forEach(expense => {\r\n            updatedExpensesPerCategory.forEach(updatedExpensePerCategory => {\r\n                if (updatedExpensePerCategory.category === expense.category) {\r\n                    updatedExpensePerCategory.total += +expense.amount;\r\n                }\r\n            });\r\n            updatedExpensesPerCategory.forEach(updatedExpensePerCategory => {\r\n                updatedExpensePerCategory.percentage = (+updatedExpensePerCategory.total / total * 100).toFixed(2);\r\n            });\r\n        });\r\n        this.setState({ expensesPerCategory: updatedExpensesPerCategory });\r\n    }\r\n\r\nsetValues(props) {\r\n    this.setDayOfTheWeekValues(props);\r\n    this.setExpensePerMonthValues(props);\r\n    this.setExpensePerCategoryValues(props);\r\n    }\r\n\r\nrender() {\r\n    return (\r\n        <section className=\"stats\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Months</td>\r\n                        <th>January</th>\r\n                        <th>February</th>\r\n                        <th>March</th>\r\n                        <th>April</th>\r\n                        <th>May</th>\r\n                        <th>June</th>\r\n                        <th>July</th>\r\n                        <th>August</th>\r\n                        <th>September</th>\r\n                        <th>October</th>\r\n                        <th>November</th>\r\n                        <th>December</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        {\r\n                            this.state.expensesPerMonth.map((expensePerMonth, index) =>\r\n                                <td key={index}>{expensePerMonth.total}</td>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Percentage</td>\r\n                        {\r\n                            this.state.expensesPerMonth.map((expensePerMonth, index) =>\r\n                                <td key={index}>{expensePerMonth.percentage} %</td>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Days</th>\r\n                        <th>Monday</th>\r\n                        <th>Tuesday</th>\r\n                        <th>Wednesday</th>\r\n                        <th>Thursday</th>\r\n                        <th>Friday</th>\r\n                        <th>Saturday</th>\r\n                        <th>Sunday</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        {\r\n                            this.state.expensesPerDayOfTheWeek.map((expensesPerDay, index) =>\r\n                                <td key={index}>{expensesPerDay.total}</td>\r\n                            )\r\n                        }\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>Percentage</td>\r\n                        {\r\n                            this.state.expensesPerDayOfTheWeek.map((expensesPerDay, index) =>\r\n                                <td key={index}>{expensesPerDay.percentage} %</td>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Categories</th>\r\n                        {\r\n                            this.state.expensesPerCategory.map((expensePerCategory, index) =>\r\n                                <th key={index}>{expensePerCategory.category}</th>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        {\r\n                            this.state.expensesPerCategory.map((expensePerCategory, index) =>\r\n                                <td key={index}>{expensePerCategory.total}</td>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Percentage</td>\r\n                        {\r\n                            this.state.expensesPerCategory.map((expensePerCategory, index) =>\r\n                                <td key={index}>{expensePerCategory.percentage} %</td>\r\n                            )\r\n                        }\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n        </section>\r\n    )\r\n}\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport ExpenseItem from './expenseItem';\r\nimport Stats from './stats';\r\nimport './expenseList.css';\r\n\r\nfunction ExpenseList(props) {\r\n    return (\r\n        <section className=\"expense-list\">\r\n            {\r\n                props.expenses.length ? \r\n            <h3 className=\"heading heading--tertiary\">Your expenses:</h3> \r\n            : null\r\n            }\r\n            <ul className=\"expenses-list\">\r\n                {\r\n                    props.expenses.map((expense, index) =>\r\n                        <ExpenseItem\r\n                            key={index}\r\n                            expense={expense}\r\n                            updateExpense={props.updateExpense}\r\n                            deleteExpense={props.deleteExpense}\r\n                            options={props.options} />\r\n                    )\r\n                }\r\n            </ul>\r\n            {\r\n                props.expenses.length ? \r\n                    <Stats expenses={props.expenses}\r\n                           options={props.options} />\r\n                    : null \r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\nimport './App.css';\nimport AddForm from './components/addForm.js';\nimport ExpenseList from './components/expenseList.js';\nimport _ from 'underscore';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expenses: [],\n            options: [\n                { displayValue: 'Please select a category', value: '' }, \n                { displayValue: 'Groceries', value: 'groceries' }, \n                { displayValue: 'Rent', value: 'rent' },\n                { displayValue: 'Bills', value: 'bills' },\n                { displayValue: 'Clothes', value: 'clothes' },\n                { displayValue: 'Transportation', value: 'transportation' },\n                { displayValue: 'Gift', value: 'gift' }\n            ]\n        }\n    }\n       \n    componentDidMount = () => {\n        this.hydrateStateWithLocalStorage();\n        window.addEventListener(\n        \"beforeunload\",\n        this.saveStateToLocalStorage\n        );\n    };\n\n    componentWillUnmount = () => {\n        window.removeEventListener(\n        \"beforeunload\",\n        this.saveStateToLocalStorage\n        );\n        this.saveStateToLocalStorage();\n    };\n\n    hydrateStateWithLocalStorage = () => {\n        for (let key in this.state) {\n          if (localStorage.hasOwnProperty(key)) {\n            let value = localStorage.getItem(key);\n            try {\n              value = JSON.parse(value);\n              this.setState({ [key]: value });\n            } catch (e) {\n              this.setState({ [key]: value });\n            }\n          }\n        }\n    };\n\n    saveStateToLocalStorage = () => {\n        for (let key in this.state) {\n          localStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n    };\n    \n    addExpense = expense => {\n        this.setState({ expenses: [...this.state.expenses, expense] });\n    };\n\n    deleteExpense = id => {\n        const updatedExpenses = _.map(this.state.expenses, _.clone)\n            .filter(expense => expense.id !== id);\n        this.setState({ expenses: updatedExpenses });\n    };\n\n    updateExpense = updatedExpense => {\n        const updatedExpenses = _.map(this.state.expenses, _.clone)\n            .map(expense => expense.id === updatedExpense.id ? updatedExpense : expense);\n        this.setState({ expenses: updatedExpenses });\n    };\n\n    updateOptions = newOption => {\n        this.setState({ options: [...this.state.options, newOption]});\n    }\n\n    render() {\n        return (\n            <div className=\"App\" className={ !this.state.expenses.length ? 'full-height' : 'App' }>\n                <AddForm\n                    addExpense={this.addExpense}\n                    expenses={this.state.expenses}\n                    options={this.state.options}\n                    updateOptions={this.updateOptions} />\n                <ExpenseList\n                    expenses={this.state.expenses}\n                    updateExpense={this.updateExpense}\n                    deleteExpense={this.deleteExpense}\n                    options={this.state.options} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n// if ('serviceWorker' in navigator) {\n//     navigator.serviceWorker.register('./serviceWorker.js')\n//         .then((reg) => console.log('yeah', reg))\n//         .catch((err) => console.log('false', err));\n// }\n"],"sourceRoot":""}